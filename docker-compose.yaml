version: '3.8'
services:
  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.2
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      XPACK_MONITORING_ENABLED: "false"


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  topics:
    image: apache/kafka:latest
    command: > 
      bash -c "
      /opt/kafka/bin/kafka-topics.sh --create --topic datapipe --bootstrap-server broker:9092
      "
    depends_on:
      - broker

  spark:
    build: 
      context: streaming
    container_name: spark-streaming
    depends_on:
      zookeeper:
        condition: service_started 
      broker:
        condition: service_started
      logstash:
        condition: service_started
      
    volumes:
      - data_volume:/datap


  

  #spark:
  #      build: 
  #          context: streaming
  #      container_name: spark-streaming
  #      ports:
  #      - 8081:8081
  #      volumes:
  #      - data_volume:/datap
  #      depends_on:
  #        - zookeeper
  #        - broker 
 
  ollamaim:
    build:
      context: .  # Imposta il contesto di costruzione al livello superiore
      dockerfile: ollamaprova/Dockerfile
    ports:
      - 7869:11434
    volumes:
      - .:/code
      - ./ollama/ollama:/root/.ollama
      - data_volume:/datap
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
  elasticsearch:
    image: elasticsearch:8.8.0
    ports:
      - 9200:9200
    
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    deploy:
      resources:
        limits:
          memory: 1GB
    depends_on:
      spark:
        condition: service_started

    
volumes:
  data_volume:
    driver: local
    driver_opts:
      type: 'bind'
      o: 'bind'
      device: '/home/raffaelecali/Documenti/magistrale/tap/progetto_sp/data/'
  spark-logs:
  